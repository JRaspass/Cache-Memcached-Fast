#! /usr/bin/perl
#
use warnings;
use strict;


my %C = (
    parse_func_name => 'parse_reply',
    str_ptr => 'str_ptr',
    str_match_ptr => 'str_match_ptr',
    str_end_ptr => 'str_end_ptr',
);


my @keywords = (
    'CLIENT_ERROR\r\n',
    'DELETED\r\n',
    'END\r\n',
    'ERROR\r\n',
    'EXISTS\r\n',
    'NOT_FOUND\r\n',
    'NOT_STORED\r\n',
    'OK\r\n',
    'SERVER_ERROR ',
    'STAT ',
    'STORED\r\n',
    'VALUE ',
    'VERSION ',
);


sub dispatch_keywords {
    my ($words) = @_;

    return $words if @$words <= 1;

    my $len = 0;
    my $common = 1;
    while ($common) {
        ++$len;
        my $prefix = substr($$words[0], 0, $len);
        $common = ! grep(!/^$prefix/, @$words);
    }
    --$len;

    my $prefix = substr($$words[0], 0, $len);

    my %subtree;
    foreach my $word (@$words) {
        my $key = substr($word, $len, 1);
        my $val = substr($word, $len + 1);
        push @{$subtree{$key}}, $val;
    }

    foreach my $val (values %subtree) {
        $val = dispatch_keywords($val);
    }

    return [$prefix, \%subtree];
}


my $tree = dispatch_keywords(\@keywords);


sub output {
    my ($tree, $indent, $phase) = @_;

    my @keys = sort keys %{$$tree[1]};
    (my $common = $$tree[0]) =~ s/[^A-Z_]//g;
    my $phase_suffix = "$phase$common";
    my $output;
    if ($$tree[0]) {
        ($output = <<"        EOF") =~ s/^ {10}/' ' x ($indent - 2)/gme;
            $C{str_match_ptr} = "$$tree[0]";

            while (*$C{str_match_ptr})
              {
                if ($C{str_ptr} == $C{str_end_ptr})
                  return phase;

          /* FIXME: WRONG POINT.  */
          LABEL_PHASE_$phase:
                if (*$C{str_ptr}++ != *$C{str_match_ptr}++)
                  return NO_MATCH;
              }
            @{[ @keys ? "" : "return PHASE_$phase_suffix;\n" ]}
        EOF
        print $output;
    }

    return unless @keys;

    ($output = <<"    EOF") =~ s/^ {6}/' ' x $indent/gme;
      switch (*@{[ $C{str_ptr} ]}++)
        {
    EOF
    print $output;

    foreach my $key (@keys) {
        my $val = ${$$tree[1]}{$key};
        ($output = <<"        EOF") =~ s/^ {6}/' ' x $indent/gme;
        case '$key':
          phase = PHASE_$phase_suffix$key;

          if ($C{str_ptr} == $C{str_end_ptr})
            return phase;

        EOF
        print $output;

        output($val, $indent + 4, "$phase_suffix$key");
    }

    ($output = <<"    EOF") =~ s/^ {6}/' ' x $indent/gme;
        defalut:
          return NO_MATCH;
        }

    EOF
    print $output;
}


print <<"EOF";
/*
  DO NOT EDIT THIS FILE.
*/

int
@{[ $C{parse_func_name} ]}(int phase)
{
  int phase;

EOF

output($tree, 2, '');

print "  /* Never reach here.  */\n}\n";
